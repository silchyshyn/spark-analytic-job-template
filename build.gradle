group 'org.trendyol'
version '1.0-SNAPSHOT'
ext {
    sparkVersion = '3.1.1'
    scalaVersion = '2.12.10'
    scalaBinaryVersion = '2.12'
}

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

subprojects {

    if (project.name.endsWith('-job')) {
        apply plugin: 'scala'
        apply plugin: 'java-library'
        apply plugin: 'com.github.johnrengelman.shadow'

        sourceCompatibility = 1.8

        repositories {
            mavenCentral()
            mavenLocal()
        }

        sourceSets {
            main.scala.srcDirs = ["src/main/scala"]
            main.java.srcDirs = []
            test.scala.srcDirs = ["src/test/scala"]
            test.java.srcDirs = []
        }

        dependencies {
            implementation "org.scala-lang:scala-library:${project.scalaVersion}"
            implementation "org.apache.spark:spark-core_${project.scalaBinaryVersion}:${project.sparkVersion}"
            implementation "org.apache.spark:spark-sql_${project.scalaBinaryVersion}:${project.sparkVersion}"

            implementation "com.github.scopt:scopt_${project.scalaBinaryVersion}:3.7.1"
            implementation 'com.typesafe:config:1.4.1'
            implementation "com.github.pureconfig:pureconfig_${project.scalaBinaryVersion}:0.16.0"
            implementation "com.typesafe.scala-logging:scala-logging_${project.scalaBinaryVersion}:3.9.2"
            implementation "org.scalatest:scalatest_${project.scalaBinaryVersion}:3.2.7"
            implementation "org.scalatestplus:junit-4-13_${project.scalaBinaryVersion}:3.2.7.0"

            implementation "org.apache.spark:spark-sql-kafka-0-10_${project.scalaBinaryVersion}:3.1.1"
            compileOnly "org.apache.spark:spark-streaming_${project.scalaBinaryVersion}:3.1.1"



            implementation 'org.apache.flink:flink-core:1.14.3'
            implementation  "org.apache.flink:flink-streaming-scala_${project.scalaBinaryVersion}:1.14.3"
            implementation "org.apache.flink:flink-scala_${project.scalaBinaryVersion}:1.14.3"
            implementation "org.apache.flink:flink-connector-kafka_${project.scalaBinaryVersion}:1.14.3"
            // https://mvnrepository.com/artifact/org.apache.flink/flink-clients
            implementation "org.apache.flink:flink-clients_${project.scalaBinaryVersion}:1.14.3"

            //implementation "org.json4s:json4s-native_${project.scalaBinaryVersion}:4.0.3"
            implementation "com.typesafe.play:play-json_${project.scalaBinaryVersion}:2.9.2"
        }

/*        afterEvaluate { p ->
            publishing {
                repositories {
                    maven {
                        name = 'LocalPublish'
                        url = layout.buildDirectory.dir(publishFolder)
                    }
                }
                publications {
                    mavenJava(MavenPublication) {
                        artifactId = jar.archiveBaseName.get()
                        from components.java
                    }
                }
            }
        }*/
    }

    if (project.name.endsWith('-job')) {

        shadowJar {
            zip64 = true
            archiveClassifier.set('')
            mergeServiceFiles()
            relocate 'com.google.protobuf', 'shadow.com.google.protobuf'
            relocate 'shapeless', 'shadow.shapeless'
        }

        task job {
            dependsOn 'shadowJar'

            doLast {
                def moduleName = project.parent.name
                def fullName = moduleName.substring(0, moduleName.lastIndexOf('-') + 1) + project.name
                def jobDir = "job/" + fullName
                delete("$buildDir/job")
                mkdir("$buildDir/$jobDir")

                copy {
                    from layout.buildDirectory.dir("libs")
                    into layout.buildDirectory.dir("$jobDir")
                }
            }
        }
    }
}
