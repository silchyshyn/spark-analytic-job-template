version: '2.1'

networks:
  kafka-network:
    ipam:
      config:
        - subnet: 172.19.0.0/16

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      kafka-network:
        ipv4_address: 172.19.0.2

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      kafka-network:
        ipv4_address: 172.19.0.3

  producer:
    image: data-producer:1.1
    container_name: producer
    depends_on:
      - kafka
#    build:
#      dockerfile: ./producer/Dockerfile
    environment:
      BOOTSTRAP_SERVERS: 172.19.0.3:9092
      BATCH_INTERVAL: 100.millisecond
      BATCH_SIZE: 100
      ORDERS_SOURCE_PATH: /raw-data/orders.json
      ORDERS_TOPIC: orders
      PRODUCTS_SOURCE_PATH: /raw-data/products.json
      PRODUCTS_TOPIC: products
    networks:
      kafka-network:
        ipv4_address: 172.19.0.4